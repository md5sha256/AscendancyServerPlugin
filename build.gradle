buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "sponge"
            url = "https://repo.spongepowered.org/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.2"
    }
}

plugins {
    id 'java'
    id 'java-library'
    id("org.spongepowered.gradle.plugin") version "0.11.0-SNAPSHOT"
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "com.github.johnrengelman.shadow"


group = project.properties.group
version = project.properties.version
archivesBaseName = project.properties.name

repositories {
    mavenCentral()
    maven {
        name = "aikar"
        url = "https://repo.aikar.co/content/groups/aikar/"
    }
}

dependencies {


    //SpongeAPI
    implementation("org.spongepowered:spongeapi:7.4.0-SNAPSHOT") {
        configurations {
            runtime.exclude(module: "spongeapi")
            // Exclude sponge's configurate, we shade in configurate 4.0.0
            exclude group: "org.spongepowered.configurate"
        }
        annotationProcessor("org.spongepowered:spongeapi:7.4.0-SNAPSHOT")
        testAnnotationProcessor("org.spongepowered:spongeapi:7.4.0-SNAPSHOT")
    }

    // Jetbrains Annotations
    compileOnly("org.jetbrains:annotations:19.0.0")

    //AscendancyLib
    implementation project(":AscendancyLib")

    // Guice assisted-inject
    implementation("com.google.inject.extensions:guice-assistedinject:4.1.0") {
        exclude group: "com.google.inject", module: "guice"
    }

    // ACF
    implementation("co.aikar:acf-sponge:0.5.0-SNAPSHOT")

    // TaskChain
    implementation("co.aikar:taskchain-sponge:3.7.2")

    // Configurate 4.0.0
    implementation("org.spongepowered:configurate-yaml:4.0.0")
}

minecraft {
    forgeVersion = project.properties.forgeVersion
    mappings = project.properties.mcpVersion
}

assemble {
    dependsOn(project.shadowJar)
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

compileJava {
    // Keep params
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = "javac"
}


shadowJar {
    baseName = archivesBaseName
    relocate("co.aikar.taskchain", "com.gmail.andrewandy.ascendancy.serverplugin.lib.taskchain")
    relocate("co.aikar.commands", "com.gmail.andrewandy.ascendancy.serverplugin.lib.acf")
    relocate("co.aikar.locales", "com.gmail.andrewandy.ascendancy.serverplugin.lib.locales")
    relocate("io.leangen.geantyref", "com.gmail.andrewandy.ascendancy.serverplugin.lib.geantyref")
    relocate("com.google.inject", "com.gmail.andrewandy.ascendancy.serverplugin.lib.inject")
    relocate("org.checkerframework", "com.gmail.andrewandy.ascendancy.serverplugin.lib.checkerframework")
    relocate("org.yaml.snakeyaml", "com.gmail.andrewandy.ascendancy.serverplugin.lib.snakeyaml")
    // Relocate configurate to prevent conflicts with sponge (shouldn"t be an issue for Sponge 5, may be for Sponge 7.)
    relocate("org.spongepowered.configurate", "com.gmail.andrewandy.ascendancy.serverplugin.lib.configurate")
}
